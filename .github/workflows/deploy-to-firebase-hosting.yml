# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  release:
    types:
      - released
jobs:
  install:
    runs-on: ubuntu-latest
    name: Install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare environment
        id: prepare-node-environment
        uses: ./.github/actions/prepare-node-environment

      - name: Install dependencies
        if: steps.prepare-node-environment.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare environment
        uses: ./.github/actions/prepare-node-environment

      - name: Execute unit tests
        run: yarn test
  build:
    runs-on: ubuntu-latest
    name: Build
    needs: install
    env:
      REACT_APP_CHAIN: ${{ github.event_name == 'release' && 'polygon' || 'rinkeby' }}
      REACT_APP_DEBUG: ${{ github.event_name == 'release' && false || true }}
      REACT_APP_IPFS_GATEWAY: https://cryptochefs.mypinata.cloud
      REACT_APP_PRICE_FEED_API: https://price-feed-api-prod-injwaqf3ua-oa.a.run.app
      REACT_APP_REWARDS_API_RINKEBY: ${{ secrets.REACT_APP_REWARDS_API_RINKEBY }}
      REACT_APP_REWARDS_API: ${{ secrets.REACT_APP_REWARDS_API }}
      REACT_APP_INFURA_ID: ${{ secrets.REACT_APP_INFURA_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare environment
        uses: ./.github/actions/prepare-node-environment

      - name: Create dotenv file
        run: cp .env.sample .env

      - name: Build application
        run: yarn build

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build/
          retention-days: 1
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    needs:
      - build
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare environment
        uses: ./.github/actions/prepare-node-environment

      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: Deploy to Firebase channel
        id: firebase_deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_CRYPTOCHEFSIO }}"
          expires: ${{ github.event_name == 'release' && '' || github.event_name == 'push' && '30d' || '5d' }}
          channelId: ${{ github.event_name == 'release' && 'live' || github.event_name == 'push' && 'staging' || '' }}
          projectId: cryptochefsio
          target: app

      - name: Check outputs
        run: |
          echo details_url: ${{ steps.firebase_deploy.outputs.details_url }}
          echo expire_time: ${{ steps.firebase_deploy.outputs.expire_time }}
          echo urls: ${{ steps.firebase_deploy.outputs.url }}
